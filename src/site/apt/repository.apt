Repository

	A repository allows accessing data through CRUD operations in a similar way
	to a DAO. The difference is that while a DAO is meant to handle a single
	entity the repository works as if it were a collection of persistent
	entities.
	
* Repository

[./images/repository_class_tree.png] Repository interface
	
	The {{{./apidocs/com/wandrell/pattern/repository/Repository.html}Repository}}
	is meant to hide the data access, so the code works only with domain model
	classes. It offers basic CRUD operations, and implementations of it may extend
	the interface and add methods as required.
	
	An extension of this basic interface, 
	{{{./apidocs/com/wandrell/pattern/repository/QueryableRepository.html}QueryableRepository}}
	allows executing queries on the entities.

	The <getCollection> and <getEntity> methods take care of this. The first will
	return a subset of the entities contained in the repository, while the second
	will return a single one. 
	
	Any object can be used as a filter for the queries, but it is expected to be
	able to work as such. A predicate which the entities to return must validate,
	or an SQL query are examples of it, but the actual object, and how it is used,
	will depend on the implementation.
	
** The Query filter

[./images/query_class_tree.png] Query class tree

	Accompanying the repositories there is the
	{{{./apidocs/com/wandrell/pattern/repository/QueryData.html}QueryData}} interface.
	
	It is meant to be used on repositories which depend on a database, usually
	an SQL database. Using this interface as a filter it is possible to give
	the repository all the data to build a query, and then get the result from it.
	
	To ease it's use a basic implementation,
	{{{./apidocs/com/wandrell/pattern/repository/DefaultQueryData.html}DefaultQueryData}},
	is included.
	
* Collection Repository

[./images/collection_repository_class_tree.png] Collection repository class tree

	A basic implementation of the repository, 
	{{{./apidocs/com/wandrell/pattern/repository/CollectionRepository.html}CollectionRepository}},
	is offered. This serves as a stub to avoid using a persistence system, or for
	those cases where a complex	repository is not needed, as it will just use a 
	<Collection> to store all the entities.
	
	This repository queries the entities through the use of a Guava
	{{{http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Predicate.html}Predicate}},
	used instead of Java 8 own <Predicate> to keep backwards compatibility. All the
	entities which make this predicate true will be returned.